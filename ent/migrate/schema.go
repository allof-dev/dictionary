// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DefinitionsColumns holds the columns for the "definitions" table.
	DefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "synset_definitions", Type: field.TypeString, Nullable: true},
	}
	// DefinitionsTable holds the schema information for the "definitions" table.
	DefinitionsTable = &schema.Table{
		Name:       "definitions",
		Columns:    DefinitionsColumns,
		PrimaryKey: []*schema.Column{DefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "definitions_synsets_definitions",
				Columns:    []*schema.Column{DefinitionsColumns[2]},
				RefColumns: []*schema.Column{SynsetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LemmasColumns holds the columns for the "lemmas" table.
	LemmasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "written_form", Type: field.TypeString},
		{Name: "part_of_speech", Type: field.TypeString},
	}
	// LemmasTable holds the schema information for the "lemmas" table.
	LemmasTable = &schema.Table{
		Name:       "lemmas",
		Columns:    LemmasColumns,
		PrimaryKey: []*schema.Column{LemmasColumns[0]},
	}
	// SensesColumns holds the columns for the "senses" table.
	SensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "sense_synset", Type: field.TypeString, Nullable: true},
		{Name: "sense_lemma", Type: field.TypeString, Nullable: true},
	}
	// SensesTable holds the schema information for the "senses" table.
	SensesTable = &schema.Table{
		Name:       "senses",
		Columns:    SensesColumns,
		PrimaryKey: []*schema.Column{SensesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "senses_synsets_synset",
				Columns:    []*schema.Column{SensesColumns[1]},
				RefColumns: []*schema.Column{SynsetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "senses_lemmas_lemma",
				Columns:    []*schema.Column{SensesColumns[2]},
				RefColumns: []*schema.Column{LemmasColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SynsetsColumns holds the columns for the "synsets" table.
	SynsetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "part_of_speech", Type: field.TypeString},
	}
	// SynsetsTable holds the schema information for the "synsets" table.
	SynsetsTable = &schema.Table{
		Name:       "synsets",
		Columns:    SynsetsColumns,
		PrimaryKey: []*schema.Column{SynsetsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DefinitionsTable,
		LemmasTable,
		SensesTable,
		SynsetsTable,
	}
)

func init() {
	DefinitionsTable.ForeignKeys[0].RefTable = SynsetsTable
	SensesTable.ForeignKeys[0].RefTable = SynsetsTable
	SensesTable.ForeignKeys[1].RefTable = LemmasTable
}
